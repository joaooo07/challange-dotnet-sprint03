{
  "openapi": "3.0.4",
  "info": {
    "title": "ChallangeDotnet",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/moto": {
      "get": {
        "tags": [
          "Moto"
        ],
        "summary": "Lista motos",
        "description": "Retorna a lista paginada de motos cadastradas.",
        "parameters": [
          {
            "name": "Deslocamento",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "RegistrosRetornado",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista retornada com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MotoEntity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MotoEntity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MotoEntity"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Não possui dados para motos"
          }
        }
      },
      "post": {
        "tags": [
          "Moto"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MotoDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MotoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MotoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Moto salva com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MotoEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MotoEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MotoEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moto/{id}": {
      "get": {
        "tags": [
          "Moto"
        ],
        "summary": "Obtém moto por ID",
        "description": "Retorna a moto correspondente ao ID informado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moto encontrada",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MotoEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MotoEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MotoEntity"
                }
              }
            }
          },
          "404": {
            "description": "Moto não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "Moto"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MotoDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MotoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MotoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Moto"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/unidade": {
      "get": {
        "tags": [
          "Unidade"
        ],
        "summary": "Lista unidades",
        "description": "Retorna a lista paginada de unidades cadastradas.",
        "parameters": [
          {
            "name": "Deslocamento",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "RegistrosRetornado",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista retornada com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnidadeEntity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnidadeEntity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnidadeEntity"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Não possui dados para unidades"
          }
        }
      },
      "post": {
        "tags": [
          "Unidade"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnidadeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnidadeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnidadeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Unidade salva com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/unidade/{id}": {
      "get": {
        "tags": [
          "Unidade"
        ],
        "summary": "Obtém unidade por ID",
        "description": "Retorna a unidade correspondente ao ID informado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidade encontrada",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeEntity"
                }
              }
            }
          },
          "404": {
            "description": "Unidade não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "Unidade"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnidadeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnidadeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnidadeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Unidade"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/usuario": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Lista usuários",
        "description": "Retorna a lista paginada de usuários cadastrados.",
        "parameters": [
          {
            "name": "Deslocamento",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "RegistrosRetornado",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista retornada com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsuarioEntity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsuarioEntity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsuarioEntity"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Não possui dados para usuários"
          }
        }
      },
      "post": {
        "tags": [
          "Usuario"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário salvo com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usuario/{id}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Obtém usuário por ID",
        "description": "Retorna o usuário correspondente ao ID informado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioEntity"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "Usuario"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Usuario"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/usuario/login": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Login de usuário",
        "description": "Valida email e senha e retorna os dados do usuário (sem token por enquanto).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login bem-sucedido",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioEntity"
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas"
          }
        }
      }
    },
    "/api/v1/vaga": {
      "get": {
        "tags": [
          "Vaga"
        ],
        "summary": "Lista vagas",
        "description": "Retorna a lista paginada de vagas cadastradas.",
        "parameters": [
          {
            "name": "Deslocamento",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "RegistrosRetornado",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista retornada com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VagaEntity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VagaEntity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VagaEntity"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Não possui dados para a vaga"
          }
        }
      },
      "post": {
        "tags": [
          "Vaga"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VagaDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VagaDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VagaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vaga salva com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VagaEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VagaEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VagaEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vaga/{id}": {
      "get": {
        "tags": [
          "Vaga"
        ],
        "summary": "Obtém vaga por ID",
        "description": "Retorna a vaga correspondente ao ID informado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vaga encontrada",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VagaEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VagaEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VagaEntity"
                }
              }
            }
          },
          "404": {
            "description": "Vaga não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "Vaga"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VagaDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VagaDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VagaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Vaga"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "senha": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MotoDto": {
        "type": "object",
        "properties": {
          "modelo": {
            "type": "string",
            "nullable": true
          },
          "marca": {
            "type": "string",
            "nullable": true
          },
          "ano": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MotoEntity": {
        "required": [
          "ano",
          "marca",
          "modelo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "modelo": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "marca": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "ano": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UnidadeDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "ativa": {
            "type": "boolean"
          },
          "observacao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnidadeEntity": {
        "required": [
          "codigo",
          "nome"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "codigo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "ativa": {
            "type": "boolean"
          },
          "observacao": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsuarioDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "senha": {
            "type": "string",
            "nullable": true
          },
          "ativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UsuarioEntity": {
        "required": [
          "email",
          "nome",
          "senha"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "maxLength": 150,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 150,
            "minLength": 0,
            "type": "string"
          },
          "senha": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "ativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VagaDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "coberta": {
            "type": "boolean"
          },
          "ocupada": {
            "type": "boolean"
          },
          "observacao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VagaEntity": {
        "required": [
          "codigo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "codigo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "coberta": {
            "type": "boolean"
          },
          "ocupada": {
            "type": "boolean"
          },
          "observacao": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}